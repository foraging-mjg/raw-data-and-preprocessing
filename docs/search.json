[{"path":"index.html","id":"first-things-first","chapter":"1 First things first","heading":"1 First things first","text":"Things series two experiments consider experiment one experiment two separately.","code":""},{"path":"experiment-one-introduction.html","id":"experiment-one-introduction","chapter":"2 Experiment One Introduction","heading":"2 Experiment One Introduction","text":"experiment 1, computerized gaze contingent task consisted 20 individual trials. trial participants presented display containing 30 trees, 15 contained hidden fruit item target (target apple, represented filled red circle). trial, participant’s task forage retrieve 10 15 fruit items.manipulated one factor within-subjects (Resource Distribution) 2 levels: ‘clumped’ ‘random’.created ten random stimuli 15 target fruit items uniformly distributed 30 trees (random condition) ten stimuli 15 target fruit items arranged one large patch (clumped condition) covered either left right side layout.line runs code gets individual participant results files .","code":"\nsource(\"e1_process_individual_results_files.R\", local = knitr::knit_global())\n#> ── Attaching packages ─────────────────── tidyverse 1.3.1 ──\n#> ✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n#> ✔ tibble  3.1.7     ✔ dplyr   1.0.9\n#> ✔ tidyr   1.2.0     ✔ stringr 1.4.0\n#> ✔ readr   2.1.2     ✔ forcats 0.5.1\n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> \n#>  *********************************************************** \n#>           Loading standardize package version 0.2.2          \n#>      Call standardize.news() to see new features/changes     \n#>  ***********************************************************\n#> P001 done\n#> P002 done\n#> P003 done\n#> P004 done\n#> P005 done\n#> P006 done\n#> P007 done\n#> P008 done\n#> ... P009 correcting the error vlada made when she called p9 p10 and corrected it in the csv but obviously couldn't do that in the pickle\n#> P009 done\n#> P010 done\n#> P011 done\n#> P012 done\n#> P013 done\n#> P014 done\n#> P015 done\n#> P016 done\n#> P017 done\n#> P018 done\n#> P019 done\n#> P020 done\n#> P021 done\n#> P022 done\n#> P023 done\n#> P024 done\n#> P025 done\n#> P026 done\n#> P029 done\n#> P030 done\n#> P031 done\n#> P032 done\n#> P033 done\n#> P034 done\n#> P035 done\n#> P036 done\n#> P037 done\n#> P039 done\n#> P040 done\n#> P041 done\n#> P043 done\n#> P044 done\n#> P045 done\n#> P046 done"},{"path":"experiment-one-revisits-per-trial.html","id":"experiment-one-revisits-per-trial","chapter":"3 Experiment One Revisits Per Trial","heading":"3 Experiment One Revisits Per Trial","text":"","code":""},{"path":"experiment-one-revisits-per-trial.html","id":"raw-data","chapter":"3 Experiment One Revisits Per Trial","heading":"3.1 Raw data","text":"line reads dataset results collating results files participant.renames raw data doesn’t operations .","code":"\ne1 <- readRDS(\"fgms_e1_allsubs.rds\")\n# this tibble is one row for each tree visited saying whether it was a revisit or not\ne1_revisits <-\n  e1 %>%\n  transmute(\n    pp           = pid,\n    condition    = R,\n    stage        = as_factor(ifelse(trial<=5, \"early\", \"late\")),\n    progress     = as_factor(trial),\n    index        = index,\n    tree         = tile,\n    is_a_revisit = revisit\n  )"},{"path":"experiment-one-revisits-per-trial.html","id":"aggregation-1-trial-counts","chapter":"3 Experiment One Revisits Per Trial","heading":"3.2 Aggregation 1: Trial counts","text":"","code":"\n# First level of aggregation collapses over index and yields a count for each trial: \n# each row is how many revisits they made on that trial\n# THESE ARE TRIAL SUMS\nTRIAL_SUMS <-\n  e1_revisits %>% \n  group_by(pp, condition, stage, progress) %>% \n  summarise(nrevisits = sum(is_a_revisit), .groups = \"drop_last\")"},{"path":"experiment-one-revisits-per-trial.html","id":"aggregation-2-participant-means","chapter":"3 Experiment One Revisits Per Trial","heading":"3.3 Aggregation 2: Participant means","text":"","code":"\n# Second level of aggregation collapses over trials\n# each row is the average number of revisits that participant made in that combination of random/clumped and early/late\n# THESE ARE PARTICIPANT MEANS\nPARTICIPANT_MEANS <- \n  TRIAL_SUMS %>% \n  group_by(pp, condition, stage) %>% \n  summarise(meanrevisits=mean(nrevisits), .groups=\"drop_last\")"},{"path":"experiment-one-revisits-per-trial.html","id":"descriptives","chapter":"3 Experiment One Revisits Per Trial","heading":"3.4 Descriptives","text":"Condition descriptivesStage descriptivesSxC Descriptives","code":"\n# To generate mean and sd properly for each level of condition (clumped/random), \n# we first need data with one clumped score for each participant and one random score \n# for each participant, averaging over early and late stages.\ntempCond <- PARTICIPANT_MEANS %>% group_by(pp,condition) %>% summarise(cmeans=mean(meanrevisits))\n# Now we can ask for means and sd for clumped and random that each pp contributed one value to\nCONDITION_DESCRIPTIVES <- tempCond %>% group_by(condition) %>% summarise(mean=mean(cmeans), sd=sd(cmeans))\n# issue the table\nCONDITION_DESCRIPTIVES %>% \n  gt() %>% \n  tab_header(\"Revisits per trial descriptives\") %>% \n  fmt_number(columns = c(\"mean\",\"sd\"), decimals=2) %>% \n  gtsave(\"e1_tables/condition_means.png\")\n# To generate mean and sd properly for each level of stage, we first need to \n# collapse over condition (clumped/random) to get one score for each participant per level of stage (early/late)\ntempStage <- PARTICIPANT_MEANS %>% group_by(pp,stage) %>% summarise(smeans=mean(meanrevisits))\n# Now we can ask for means and sd per level of stage\nSTAGE_DESCRIPTIVES <- tempStage  %>% group_by(stage) %>% summarise(mean=mean(smeans),sd=sd(smeans))\n# issue the table\nSTAGE_DESCRIPTIVES %>% \n  gt() %>% \n  tab_header(\"Revisits per trial descriptives\") %>% \n  fmt_number(columns = c(\"mean\",\"sd\"), decimals=2) %>% \n  gtsave(\"e1_tables/stage_means.png\")\n# To get the 2 x 2 interaction means, yielding a 2x2 table with mean and sd\nSxC_DESCRIPTIVES <- PARTICIPANT_MEANS %>% group_by(condition,stage) %>% summarise(mean=mean(meanrevisits),sd=sd(meanrevisits))\nSxC_DESCRIPTIVES %>% \n  gt(rowname_col = \"stage\", groupname_col = \"condition\") %>% \n  tab_stubhead(label = \"condition\") %>% \n  fmt_number(columns = c(\"mean\",\"sd\"), decimals=2) %>% \n  tab_header(\"Revisits per trial descriptives\") %>% \n  gtsave(\"e1_tables/SxC_means.png\")"},{"path":"experiment-one-revisits-per-trial.html","id":"plots","chapter":"3 Experiment One Revisits Per Trial","heading":"3.5 Plots","text":"","code":""},{"path":"experiment-one-revisits-per-trial.html","id":"anova","chapter":"3 Experiment One Revisits Per Trial","heading":"3.6 ANOVA","text":"","code":"\nez1 <- ezANOVA(\n  data=PARTICIPANT_MEANS,\n  wid=pp,\n  within=.c(condition, stage),\n  dv=meanrevisits\n)"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
